#!/usr/bin/env ruby
# frozen_string_literal: true

require 'thor'
require 'fileutils'
require 'i18n'

# I use this to test the the existance ruby and thor in a system. Based on thor's example hello command.
class Greeting < Thor
  class_option :yell, type: :boolean
  # class_option :ruby_version, type: :boolean
  default_task :hello

  desc 'adieu NAME', 'say adieu to NAME'
  long_desc <<-LONGDESC
    `greeting adieu` will print out an adieu message to a person of your choosing.
  LONGDESC
  def adieu(name = nil)
    greet('Adieu', name)
  end

  desc 'bye NAME', 'say bye to NAME'
  long_desc <<-LONGDESC
    `greeting bye` will print out a bye message to a person of your choosing.
  LONGDESC
  def bye(name = nil)
    greet(I18n.t(:bye), name)
  end

  desc 'byebye NAME', 'say byebye to NAME'
  long_desc <<-LONGDESC
    `greeting byebye` will print out a byebye message to a person of your choosing.
  LONGDESC
  def byebye(name = nil)
    greet('Byebye', name)
  end

  desc 'ciao NAME', 'say ciao to NAME'
  long_desc <<-LONGDESC
    `greeting ciao` will print out a ciao message to a person of your choosing.
  LONGDESC
  def ciao(name = nil)
    greet('Ciao', name)
  end

  desc 'hello NAME', 'Say hello to NAME'
  long_desc <<-LONGDESC
    `greeting hello` will print out a message to a person of your choosing.
  LONGDESC
  def hello(name = nil)
    greet(I18n.t(:hello), name)
  end

  desc 'goodbye NAME', 'say goodbye to NAME'
  long_desc <<-LONGDESC
    `greeting goodbye` will print out a goodbye message to a person of your choosing.
  LONGDESC
  def goodbye(name = nil)
    greet(I18n.t(:goodbye), name)
  end

  desc 'welcome NAME', 'say welcome to NAME'
  long_desc <<-LONGDESC
    `greeting welcome` will print out welcome message to a person of your choosing.
  LONGDESC
  def welcome(name = nil)
    greet(I18n.t(:welcome), name)
  end

  map adios: :bye # es
  map chao: :ciao # es
  map chau: :ciao # es
  map hei: :hello # fi
  map heihei: :bye # fi
  map hola: :hello # es
  map tchao: :ciao # pt
  map tchau: :ciao # pt
  map tsau: :ciao # fi

  private

  def greet(greeting, name = nil, from = nil)
    name = name || ENV['USER'].capitalize || 'world'
    output = "#{greeting}, #{name}" unless options[:yell]
    output = "#{greeting.upcase}, #{name.upcase}" if options[:yell]
    say "#{output}!" if from.nil?
    say "#{output} from #{from}!" unless from.nil?
  end
end

FileUtils.cd("Projects/kraken/") if Dir.exist?("Projects/kraken/")
I18n.load_path += Dir[File.expand_path("config/locales") + "/*.yml"]
# puts "hello, world!", "how's it going?"
Greeting.start(ARGV)
