#!/usr/bin/env ruby
require 'thor'
require 'fileutils'
require 'date'
require 'socket'

# Loki here is named after the finnish word 'loki', meaning a log(file).
class Loki < Thor
  class_option :path
  option :project #:comment
  default_task :latest

  desc "add PATH", "add a log line to backup.log in PATH"
  long_desc <<-LONGDESC
    `loki add` will add a log line to backup.log in PATH.
  LONGDESC
  def add(project=nil, comment=nil, path=nil)
    comment = comment || Socket.gethostname || 'xyz' #|| options[:comment]
    project = options[:project] || project || 'proj'
    filename = 'backup.log'
    path = options[:path] || path
    unless path.nil? then FileUtils.cd(path); end
    FileUtils.touch(filename)
    line = Time.now.to_s + " " + project + " ver " + comment
    File.open('backup.log', 'a') do |f|
      f.puts line
    end
    puts line
  end

  desc "latest PATH", "print latest backup date for PATH"
  long_desc <<-LONGDESC
    `loki latest` will print out the latest backup date for PATH.
  LONGDESC
  def latest(path=nil)
    puts latest_line(path)
  end

  desc "today PATH", "print true if backup has been run for PATH today"
  long_desc <<-LONGDESC
    `loki today` will print out a boolean value about if backup for PATH has been run today.
  LONGDESC
  def today(path=nil)
    latest_date = latest_line(path).to_s.include? Date.today.to_s
    puts latest_date
  end

private
  def latest_line(path=nil)
    path = options[:path] || path
    unless path.nil? then FileUtils.cd(path); end
    if File.file?('backup.log')
      `tail -1 backup.log`.to_s #retrieves the last line of backup.log using system tools
    else
      '0000-00-00 00:00:00 xyz ver xyz'.to_s
    end
  end
end

Loki.start(ARGV)
