#!/usr/bin/env ruby
# frozen_string_literal: true

require 'thor'
require 'sqlite3'

# HAKEMISTO class: scans contents of a dir and counts checksums.
class Hakemisto < Thor
  default_task :duplicate

  desc 'default', 'default function.'
  def default(db_file = nil)
    # db_file = "#{db_file}/hakemisto.db" if db_file.dir?
    db = database(db_file) # check filename?
    # temp = system("asetus dir:temp")
    files.each do |f|
      #
    end
    # FileUtils.mv("#{temp}/hakemisto.db", db_file)
  end

  desc 'duplicate', 'look for duplicates in the DB.'
  def duplicate(filename = nil)
    db = database(db_file)
  end

  desc 'missing', 'look for missing files in the DB.'
  def missing
    #
  end

  private

  def database(filename = nil)
    db_file = 'hakemisto.db' if db_file.nil?
    # db_file = 'hakemisto.db' if db_file.dir?
  end

end

Hakemisto.start(ARGV)
