#!/bin/bash
if [ -d "$1" ]; then cd "$1"; fi
if [ -f backup.log ]; then nada; else
	if [ -f changed.old ]; then mv changed.old backup.log; fi
	if [ -f changed.log ]; then mv changed.log backup.log; fi
	if [ -f changed.lst ]; then mv changed.lst backup.log; fi
fi
if [ -f backup.log ]; then nada; else if [ -f changed.lst ]; then mv changed.lst backup.log; fi; fi
if [ -f duplicate.lst ]; then nada; else
	if [ -f duplicate.old ]; then mv duplicate.old duplicate.lst; fi
	if [ -f duplicate.log ]; then mv duplicate.log duplicate.lst; fi
fi
if [ -f backup.log ]; then nada; else if [ -f duplicate.lst ]; then mv duplicate.lst backup.log; fi; fi
if [ -f hakemisto.lst ]; then nada; else
	if [ -f levy.old ]; then mv levy.old hakemisto.lst; fi
	if [ -f levy.log ]; then mv levy.log hakemisto.lst; fi
	if [ -f levy.lst ]; then mv levy.lst hakemisto.lst; fi
fi
if [ -f backup.log ]; then nada; else if [ -f missing.lst ]; then mv missing.lst backup.log; fi; fi
if [ -f roina.lst ]; then nada; else if [ -f junk.lst ]; then mv junk.lst roina.lst; fi; fi
TEMP=$(asetus dir:temp)/$(verkko tty); #retrieve temp-dir from settings. during the run output files are stored in tty-specific dir under temp dir.
DIR="."; PWD=$(pwd); PVM=$(pvm); INIT_STRING="$HOSTNAME $PVM $PWD" #pvm=date +"%F %R"
KAYTTIS=$(kayttis)
if [ -z "$TABLE" ]; then TABLE="$(asetus str:table)"; fi
DB=$TEMP/hakemisto.db kanta -g:"Documents" "status TEXT, ls_time DATETIME, summa TEXT, path TEXT"; DB=$TEMP/hakemisto.db TABLE="Documents" kanta -a:"status,ls_time,summa,path" "'DIR', '$PVM', '0,0', '$PWD'"
echo $INIT_STRING/hakemisto.lst > $TEMP/hakemisto.lst
echo $INIT_STRING/roina.lst > $TEMP/roina.lst
kaiku $INIT_STRING
ls -1R > $TEMP/ls.lst
EXCL=$(asetus dir:excl)
while read p; do # doublespaces "  " not read
	FILE_STATUS="OK"; EXCLUDE_LISTED=$(EXCL=$EXCL/default.lst roina $p); if [ "$EXCLUDE_LISTED" = "false" ]; then case $p in
		".:") DIR=".";;
		"./"*":"*) DIR=$(echo "$p"|awk -F':' '{ print $1 $2 }') ;; #\
		*"._"*) echo "$DIR/$p" >> $TEMP/roina.lst;;
		*"changed.l"*) FILE_STATUS="R"; echo "$DIR/$p" >> $TEMP/roina.lst;;
		*".DS_Store"*) FILE_STATUS="R"; echo "$DIR/$p" >> $TEMP/roina.lst;;
		*"duplicate.l"*) FILE_STATUS="R"; echo "$DIR/$p" >> $TEMP/roina.lst;;
		*"esktop.ini"*) FILE_STATUS="R"; echo "$DIR/$p" >> $TEMP/roina.lst;;
		*"humbs.db"*) FILE_STATUS="R"; echo "$DIR/$p" >> $TEMP/roina.lst;;
		*"junk.lst"*) FILE_STATUS="R"; echo "$DIR/$p" >> $TEMP/roina.lst;;
		*"indb.lst"*) FILE_STATUS="R"; echo "$DIR/$p" >> $TEMP/roina.lst;;
		*"levy.log"*) FILE_STATUS="R"; echo "$DIR/$p" >> $TEMP/roina.lst;;
		*"levy.lst"*) FILE_STATUS="R"; echo "$DIR/$p" >> $TEMP/roina.lst;;
		*"LOCK"*) FILE_STATUS="R"; echo "$DIR/$p" >> $TEMP/roina.lst;;
		*"metadata.opf"*) FILE_STATUS="R"; echo "$DIR/$p" >> $TEMP/roina.lst;;
		*"missing.l"*) FILE_STATUS="R"; echo "$DIR/$p" >> $TEMP/roina.lst;;
		"total "*) nada;;
		*)
			FILE=$DIR/$(echo $p|awk -F'*' '{ print $1 }')
			if [ "$(roina $FILE)" = "true" ]; then FILE_STATUS="RR"; fi
			case "$KAYTTIS" in
				darwin*) LS_TIME=$(gls -l --time-style=full-iso "$FILE"|awk '{print $6 "T" $7 $8 }') ;;
				* ) LS_TIME=$(ls --full-time "$FILE"|awk '{print $6 "T" $7 $8 }');;
			esac
			if [ -d "$FILE" ]; then nada; else
				SUMMA=$(summa "$FILE"); RIVI="$SUMMA,$FILE"
				if [ "$(DB=$DB TABLE=$TABLE kannassa $FILE)" = "false" ]; then
					if [ "$FILE_STATUS" = "OK" ]; then FILE_STATUS="MM"; fi
				fi
				if [ -f hakemisto.lst ]; then
					#EKA_RIVI=$(DB=hakemisto.db TABLE="Documents" kanta -s:summa|grep DIR)
					RIVIT=$(cat hakemisto.lst | grep "$SUMMA" | grep -v "$RIVI" )
					if [ "$RIVIT" = "" ]; then nada; else
					if [ "$SUMMA,$FILE" = "$RIVIT" ]; then nada; else
						if [ "$LS_TIME,$SUMMA,$FILE" = "$RIVIT" ]; then nada; else
							if [ "$FILE_STATUS,$LS_TIME,$SUMMA,$FILE" = "$RIVIT" ]; then nada; else
								if [ "$FILE_STATUS" = "OK" ]; then FILE_STATUS="N2"; fi
								if [ "$FILE_STATUS" = "MM" ]; then FILE_STATUS="M2"; fi
								if [ "$FILE_STATUS" = "RR" ]; then FILE_STATUS="R2"; fi
							fi
						fi
					fi; fi
				fi
				if [ "$1" = "-t" ]; then RIVI="$FILE_STATUS,$SUMMA,$FILE"; else RIVI="$FILE_STATUS,$LS_TIME,$SUMMA,$FILE"; fi; echo "$RIVI" >> $TEMP/hakemisto.lst
				DB=$TEMP/hakemisto.db TABLE="Documents" kanta -a:"status,ls_time,summa,path" "'$FILE_STATUS', '$LS_TIME', '$SUMMA', '$FILE'" #problem with filenames that include '
			fi;;
	esac; fi
done < $TEMP/ls.lst
# output files move to a directory in question
cp $TEMP/hakemisto.db ./hakemisto.db
cp $TEMP/hakemisto.lst ./hakemisto.lst
cp $TEMP/roina.lst ./roina.lst
if [ -f $TEMP/hakemisto.db ]; then rm $TEMP/hakemisto.db; fi
if [ -f $TEMP/hakemisto.lst ]; then rm $TEMP/hakemisto.lst; fi
if [ -f $TEMP/ls.lst ]; then rm $TEMP/ls.lst; fi
if [ -f $TEMP/roina.lst ]; then rm $TEMP/roina.lst; fi
