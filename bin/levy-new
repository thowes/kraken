#!/usr/bin/env ruby
# frozen_string_literal: true

require 'thor'
# require 'fileutils'

# For mounting disks and related issues in nix-based cmdl systems (only WSL for now).
class Levy < Thor
  class_option :letter, desc: 'define the drive letter.'

  desc 'berg LETTER', 'mount drive LETTER'
  long_desc <<-LONGDESC
    `levy berg` will mount drive to LETTER.
  LONGDESC
  def berg(letter = nil)
    mnt_path = "/mnt/#{letter}" unless RUBY_PLATFORM.include?('darwin')
    mnt_path = "/Volumes/#{letter}" if RUBY_PLATFORM.include?('darwin')
    mount(mnt_path, letter) if Dir.empty?(mnt_path)
  end

  desc 'default LETTER', 'mount LETTER'
  long_desc <<-LONGDESC
    `levy default` default command.
  LONGDESC
  def default(argu1 = nil, argu2 = nil)
    if %w[berg levy].include?(argu1) && !argu2.nil?
      berg argu2
    elsif %w[umount unm unmount].include?(argu1) && !argu2.nil?
      unmount argu2
    elsif !argu1.nil?
      berg argu1
    else
      berg 'b'
    end
  end

  private

  def mount(mnt_path, letter = nil)
    puts "sudo mount #{mnt_path}" if RUBY_PLATFORM.include?('darwin')
    system("sudo mount -t drvfs #{letter}: #{mnt_path}") unless RUBY_PLATFORM.include?('darwin')
  end

  def unmount(mnt_path = nil, letter = nil)
    # system("sudo umount -v -t drvfs #{letter}: #{mnt_path}") unless RUBY_PLATFORM.include?('darwin')
  end
end

Levy.start(ARGV)
