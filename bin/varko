#!/bin/bash
if [ -d $1 ] && [ $2 != "" ]; then
	KR_DIR_TEMP=$(asetus dir:temp); DIR=$1; PKG=$2; DIR_TEMP=$KR_DIR_TEMP
	# Delete and rename old backups, if they exist.
	if [ -f $DIR_TEMP/$PKG.$USER.$HOSTNAME.old ]; then \rm $DIR_TEMP/$PKG.$USER.$HOSTNAME.old; fi
	BU_LATEST_MD5="nada"; BU_TODAY_MD5=md5
	if [ -f $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip ]; then
		case $(uname) in
			Darwin) BU_LATEST_MD5=$(md5 $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip|awk '{print $4}');;
			*) BU_LATEST_MD5=$(md5sum $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip|awk '{print $1}');;
		esac; \mv $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip $DIR_TEMP/$PKG.$USER.$HOSTNAME.old
	fi
	# Getting the last row of backup.log
	BU_LATEST_LOGLINE=$(latest $DIR)
	# Splitting BU_LATEST_LOGLINE the retrieve the parts of the string for md5 sum and latest backup date.
	BU_LATEST_DATE=$(echo $BU_LATEST_LOGLINE|awk '{print $1}')
	if [ $BU_LATEST_MD5 == "nada" ]; then BU_LATEST_MD5=$(echo $BU_LATEST_LOGLINE|awk '{print $5}'); fi
	BU_TODAY_DATE=$(date +"%F")
	# Compare the date in latest line of backup.log, if not today, then continue.
	if [ $BU_LATEST_DATE != $BU_TODAY_DATE ]; then
		KR_DIR_EXCL=$(asetus dir:excl)
		# Creating new zip from the directory without backup.log file
		if [ -f $KR_DIR_EXCL/$2.lst ]; then
			#kaiku "vk27 $2" "L:$BU_LATEST_DATE" "T:$BU_TODAY_DATE" $KR_DIR_EXCL/$2.lst
			zip -qr $KR_DIR_TEMP/$2.$USER.$HOSTNAME.zip $1 -x@$KR_DIR_EXCL/$2.lst -x *backup.log* -x *Thumbs.db* -x "*.DS_Store"
		else
			KR_DIR_INCL=$(asetus dir:incl)
			if [ -f $KR_DIR_INCL/$2.lst ]; then
				zip -qr $KR_DIR_TEMP/$2.$USER.$HOSTNAME.zip $1 -i@$KR_DIR_INCL/$2.lst -x *backup.log* -x *Thumbs.db* -x "*.DS_Store"
			else
				zip -qr $KR_DIR_TEMP/$2.$USER.$HOSTNAME.zip $1 -x@$KR_DIR_EXCL/default.lst -x *backup.log* -x *Thumbs.db* -x "*.DS_Store"
			fi
		fi
		if [ -f $KR_DIR_TEMP/$2.$USER.$HOSTNAME.zip ]; then
			case $(uname) in
				Darwin) BU_TODAY_MD5=$(md5 $KR_DIR_TEMP/$2.$USER.$HOSTNAME.zip|awk '{print $4}');;
				*) BU_TODAY_MD5=$(md5sum $KR_DIR_TEMP/$2.$USER.$HOSTNAME.zip|awk '{print $1}');;
			esac
		fi
		# Checking if md5 sum is the same between the latest backup in backup.log and current backup. If not, continue.
		if [ "$BU_LATEST_MD5" != "$BU_TODAY_MD5" ]; then
			# Create new encrypted file from the created zip file.
			if [ -f $KR_DIR_TEMP/$2.$USER.$HOSTNAME.zip ]; then
				debug "$BU_LATEST_MD5" "v" "$BU_TODAY_MD5"
				KR_RECIPIENT=$(asetus str:recipient)
				gpg --encrypt -r $KR_RECIPIENT $KR_DIR_TEMP/$2.$USER.$HOSTNAME.zip
			fi
		else debug "kop.sh:42nc" $2 "L:$BU_LATEST_MD5" "T:$BU_TODAY_MD5"
		fi
		# Removing the created zip file.
		if [ -f $KR_DIR_TEMP/$2.$USER.$HOSTNAME.zip ]; then \rm $KR_DIR_TEMP/$2.$USER.$HOSTNAME.zip; fi
		# Moving the created gpg file to the backup directory.
		if [ -f $KR_DIR_TEMP/$2.$USER.$HOSTNAME.zip.gpg ]; then tynnyri $2
			# Update the backup.log file and copy it to the backup.logs directory.
			bulog -a $1 $2 $BU_TODAY_MD5
			KR_DIR_LOGS=$(asetus dir:logs)
			\cp $1/backup.log $KR_DIR_LOGS/$2.log
			if [ "_$KR_DIR_BUC" == "_" ]; then KR_DIR_BUC=$(asetus dir:buc); fi
			\mv $KR_DIR_TEMP/$2.$USER.$HOSTNAME.zip.gpg $KR_DIR_BUC/$2.cbc
		fi
	else
		debug "kop.sh:54nc" $2 "L:$BU_LATEST_DATE" "T:$BU_TODAY_DATE"
	fi
else
	virhe "Arguments" $1 $2 "not valid!"
fi
