#!/bin/bash
if [ $1 != "" ] && [ $2 != "" ]; then DIR_TEMP=$(asetus dir:temp);
	if [ -d $1 ]; then DIR=$1; PKG=$2; fi
	if [ -d $2 ]; then DIR=$2; PKG=$1; fi
	# Delete and rename old backups, if they exist.
	if [ -f $DIR_TEMP/$PKG.$USER.$HOSTNAME.old ]; then \rm $DIR_TEMP/$PKG.$USER.$HOSTNAME.old; fi
	BU_LATEST_MD5="nada"; BU_TODAY_MD5=md5
	if [ -f $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip ]; then
		case $(uname) in
			Darwin) BU_LATEST_MD5=$(md5 $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip|awk '{print $4}');;
			*) BU_LATEST_MD5=$(md5sum $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip|awk '{print $1}');;
		esac; \mv $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip $DIR_TEMP/$PKG.$USER.$HOSTNAME.old
	fi
	BU_LATEST_LOGLINE=$(latest $DIR) # Getting the last row of backup.log
	# Splitting BU_LATEST_LOGLINE the retrieve the parts of the string for md5 sum and latest backup date.
	BU_LATEST_DATE=$(echo $BU_LATEST_LOGLINE|awk '{print $1}')
	if [ $BU_LATEST_MD5 == "nada" ]; then BU_LATEST_MD5=$(echo $BU_LATEST_LOGLINE|awk '{print $5}'); fi
	BU_TODAY_DATE=$(date +"%F")
	# Compare the date in latest line of backup.log, if not today, then continue.
	if [ $BU_LATEST_DATE != $BU_TODAY_DATE ]; then
		KR_DIR_EXCL=$(asetus dir:excl)
		# Creating new zip from the directory without backup.log file
		if [ -f $KR_DIR_EXCL/$PKG.lst ]; then
			zip -q -r $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip $DIR -x@$KR_DIR_EXCL/$PKG.lst -x *backup.log* -x *Thumbs.db* -x "*.DS_Store"
		else
			KR_DIR_INCL=$(asetus dir:incl)
			if [ -f $KR_DIR_INCL/$PKG.lst ]; then
				zip -q -r $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip $DIR -i@$KR_DIR_INCL/$PKG.lst -x *backup.log* -x *Thumbs.db* -x "*.DS_Store"
			else
				zip -q -r $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip $DIR -x@$KR_DIR_EXCL/default.lst -x *backup.log* -x *Thumbs.db* -x "*.DS_Store"
			fi
		fi
		if [ -f $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip ]; then
			case $(uname) in
				Darwin) BU_TODAY_MD5=$(md5 $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip|awk '{print $4}');;
				*) BU_TODAY_MD5=$(md5sum $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip|awk '{print $1}');;
			esac
		fi
		# Checking if md5 sum is the same between the latest backup in backup.log and current backup. If not, continue.
		if [ "$BU_LATEST_MD5" != "$BU_TODAY_MD5" ]; then
			# Create new encrypted file from the created zip file.
			if [ -f $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip ]; then
				debug "$BU_LATEST_MD5" "v" "$BU_TODAY_MD5"
				KR_RECIPIENT=$(asetus str:recipient)
				gpg --encrypt -r $KR_RECIPIENT $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip
			fi
		else debug "varko:47" $PKG "L:$BU_LATEST_MD5" "T:$BU_TODAY_MD5"
		fi
		# Removing the created zip file.
		if [ -f $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip ]; then \rm $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip; fi
		# Moving the created gpg file to the backup directory.
		if [ -f $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip.gpg ]; then tynnyri $PKG
			# Update the backup.log file and copy it to the backup.logs directory.
			bulog -a $DIR $PKG $BU_TODAY_MD5
			KR_DIR_LOGS=$(asetus dir:logs)
			\cp $DIR/backup.log $KR_DIR_LOGS/$PKG.log
			if [ "_$KR_DIR_BUC" == "_" ]; then KR_DIR_BUC=$(asetus dir:buc); fi
			\mv $DIR_TEMP/$PKG.$USER.$HOSTNAME.zip.gpg $KR_DIR_BUC/$PKG.cbc
		fi
	else
		debug "varko:62" $PKG "L:$BU_LATEST_DATE" "T:$BU_TODAY_DATE" $DIR
	fi
else
	virhe "Arguments" $1 $2 "not valid!"
fi
