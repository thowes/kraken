#!/usr/bin/env ruby
# frozen_string_literal: true

require 'thor'
# require 'fileutils'
# require 'csv'

# PROJEKTI class: list projects and their directories.
class Projekti < Thor
  default_task :tila
  # verbose

  desc 'dir', 'show the project directory.'
  def dir
    #
  end

  desc 'go', 'go to the project directory.'
  def go
    #
  end

  desc 'tila', 'show the git project status message in one line.'
  def tila
    status
  end

  private

  def status
    status_message = `git status`
    if status_message.to_s.gsub("\n", ' ').include?('On branch master')
      if status_message.to_s.gsub("\n", ' ').include?('ahead')
        puts 'You are ahead of master branch in commits.'
      else
        if status_message.to_s.gsub("\n", ' ').include?('date')
          if status_message.to_s.gsub("\n", ' ').include?('commit')
            puts 'Up-to-date with origin/master.'
          else 'You have changes not staged for commit.'
          end
        end
      end
    else
      puts 'Not in master branch.'
    end
    puts "\nSTATUS:\n#{status_message}" # if verbose?
  end

end

Projekti.start(ARGV)
