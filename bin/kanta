#!/bin/sh
kanta_params() {
	case $1 in
		-*) case $1 in
				*a:*) FUNCTION=add; FILTER=$(echo $1|awk -F\: '{print $2}');;
				*cf*:*) CFG=$(echo $1|awk -F\: '{print $2}');;
				*cr:*) FUNCTION=create; TABLE=$(echo $1|awk -F\: '{print $2}');;
				*db:*) DB=$(echo $1|awk -F\: '{print $2}');;
				*del:*) FUNCTION=remove;;
				*f:*) FUNCTION=search; FILTER=$(echo $1|awk -F\: '{print $2}');;
				*gen*) FUNCTION=generate;;
				*g:*) FUNCTION=create; TABLE=$(echo $1|awk -F\: '{print $2}');;
				*-h*) FUNCTION=help; FILTER=$(echo $1|awk -F\: '{print $2}');;
				*i:*) FUNCTION=add; TABLE=$(echo $1|awk -F\: '{print $2}');;
				*l:*) FUNCTION=list; FILTER=$(echo $1|awk -F\: '{print $2}');;
				*n:*) FUNCTION=count; FILTER=$(echo $1|awk -F\: '{print $2}');;
				*r) FUNCTION=replace;;
				*s:*) INPUT=$(echo $1|awk -F\: '{print $2}');;
				*st*) FUNCTION=status; FILTER=$(echo $1|awk -F\: '{print $2}');;
				*t:*) TABLE=$(echo "$1"|awk -F\: '{print $2}');;
				*u) FUNCTION=update;;
				*w*) FILTER=$(echo $1|awk -F\: '{print $2}');;
				*x) FUNCTION=status; FILTER=INDEX;;
			esac;;
		*) SEARCH="$1";;
	esac
}

if [ -z "$1" ]; then FUNCTION=status; else
	FUNCTION=search; kanta_params "$(echo $1|tr ";" ":")" 
	if [ -z "$2" ]; then nada; else
		kanta_params "$(echo $2|tr ";" " ")"
		if [ -z "$3" ]; then nada; else kanta_params "$(echo $3|tr ";" " ")"; fi
	fi
fi

if [ -z "$DB" ]; then virhe DB $DB not defined; else
	case $FUNCTION in
		add) sqlite3 $DB "INSERT INTO $TABLE ($FILTER) values($SEARCH);";;
		count) if [ -z "$FILTER" ] && [ -z "$SEARCH" ]; then sqlite3 $DB "SELECT Count(*) FROM $TABLE WHERE $FILTER LIKE '%$SEARCH%';"; else sqlite3 $DB "SELECT Count(*) FROM $TABLE;"; fi;;
		create) sqlite3 $DB "CREATE TABLE $TABLE ($SEARCH);";;
		generate) if [ "_$DB" != "_" ]; then touch $DB; fi;;
		help) LIB=$(asetus dir:lib); if [ "_$(echo $FILTER)_" != "__" ]; then cat $LIB/../doc/kanta.txt | grep $FILTER; else cat $LIB/../doc/kanta.txt; fi;;
		list) if [ "_$(echo $SEARCH)_" != "__" ]; then sqlite3 $DB "SELECT * FROM $TABLE;" | grep $SEARCH; else sqlite3 $DB "SELECT * FROM $TABLE;"; fi;;
		replace) if [ "_$(echo $FILTER)_" != "__" ] && [ "_$(echo $SEARCH)_" != "__" ]; then sqlite3 $DB "SELECT * FROM $TABLE WHERE $FILTER LIKE '%$SEARCH%';"; else nada; fi;;
		remove) echo sqlite $DB delete "(where $REMOVE)";;
		search) if [ "_$(echo $FILTER)_" != "__" ] && [ "_$(echo $SEARCH)_" != "__" ]; then sqlite3 $DB "SELECT * FROM $TABLE WHERE $FILTER LIKE '%$SEARCH%';"; else sqlite3 $DB "SELECT * FROM $TABLE;"; fi;;
		status) if [ "_$(echo $FILTER)_" != "__" ]; then sqlite3 $DB .schema | grep $FILTER; else sqlite3 $DB .schema; fi;;
		update) echo sqlite $DB edit;;
	esac
fi
